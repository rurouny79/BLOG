server setting in ubuntu 21.10

cpu : 5950x
mainboard : ASUS TUF GAMING B550-PRO 

1. bios option
  - Load optimized default
  - PBO : Auto -> Enable
  - XMP : Auto -> Profile1

1. install openssh-server
  * select [*] in ubuntu server install process

1. install docker
  $ sudo apt-get remove docker docker-engine docker.io containerd runc
  $ sudo apt-get update
  $ sudo apt-get install \
    ca-certificates \
    curl \
    gnupg \
    lsb-release
  $ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
  $ echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
    $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  $ sudo apt-get update
  $ sudo apt-get install docker-ce docker-ce-cli containerd.io
  $ sudo docker run hello-world
  
1. docker container moving
  $ docker commit container_name > image_name
  $ docker save image_name > image_name.tar
  $ cat image_name.tar | docker load

1. install mystartup(include mining) service
  * /etc/systemd/system/mystartup.service
    [Unit]
    Description=My Start Up
    [Service]
    Type=oneshot
    ExecStart=/myopt/mystartup.sh
    [Install]
    WantedBy=basic.target
  * sudo systemctl daemon-reload
  * sudo systemctl enable mystartup.service

1. (Optional) wol setting
  * /etc/systemd/system/wol.service
    - [Unit]
    - Description=Enable Wake On Lan
    - [Service]
    - Type=oneshot
    - ExecStart=/sbin/ethtool --change enp6s0 wol g
    - [Install]
    - WantedBy=basic.target
  * sudo systemctl daemon-reload
  * sudo systemctl enable wol.service
  * install android wol app -> udp / portnumber 9 (gigabyte mainboard)

===== belows are for DOCKER (Ubuntu 20.04.3 LTS) =====

1. smbd
  $ (host) docker run -it -v /data/smb:/data/smb -p 139:139 -p 445:445 --name smb ubuntu
  $ apt install samba vim
  * /etc/samba/smb.conf
    [homes]
    browseable = no
    read only = no
    path = /data/smb
  $ adduser <username>
  $ smbpasswd -a <username>
  $ service smbd restart

1. svn (https)
  $ (host) docker run -it -v /data/svn:/data/svn -p 80:80 -p 443:443 --name svn ubuntu
  * apt install subversion apache2 libapache2-mod-svn vim
  * vi /etc/apache2/mods-available/dav_svn.conf
    - <Location /svn>
    - DAV svn
    - SVNParentPath /data/svn
    - AuthType Basic
    - AuthName "Subversion Repository"
    - AuthUserFile /data/svn/dav_svn.passwd
    - Require valid-user
    - </Location>
  * htpasswd -c /data/svn/dav_svn.passwd ruro
  * chown -R www-data:www-data /data/svn
  * a2enmod ssl
  * a2ensite default-ssl
  * service apache2 restart
  * svn 접속
    - https://192.168.0.2/svn/main
  * svn 복원
    $ svnadmin create /data/svn/main
    $ svnadmin load /data/svn/main < svn.dump
    $ chown -R www-data:www-data /data/svn
  * (Optional) vi /etc/apache2/sites-available/default-ssl.conf
    - SSLCertificateFile : 인증서위치(.crt)
    - SSLCertificateKeyFile : 개인키위치(.key)
  * (Optional-not using apache2) svn list svn+ssh://ruro@192.168.0.2/data/svn/main
  
1. code-server
  * curl -fsSL https://code-server.dev/install.sh | sh
  * /home/ruro/.config/code-server/config.yaml
    - bind-addr: 0.0.0.0:443
    - auth: password
    - password: '????????'
    - cert: true
  * Allows code-server to listen on port 443
    - sudo setcap cap_net_bind_service=+ep /usr/lib/code-server/lib/node

1. gui (rdp:3389)
  * sudo apt install xrdp xfce4
  * sudo apt install firefox
  
===== belows are Sever Management Usage =====

1. disk check
  * sudo smartctl --all /dev/sdb
